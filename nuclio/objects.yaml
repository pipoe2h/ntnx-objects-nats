metadata:
  name: objects
  labels:
    nuclio.io/project-name: default
  resourceVersion: "2511754"
spec:
  handler: "main:handler"
  runtime: "python:3.6"
  env:
    - name: ACCESS_KEY
      valueFrom:
        secretKeyRef:
          name: objects-secret
          key: accesskey
    - name: SECRET_KEY
      valueFrom:
        secretKeyRef:
          name: objects-secret
          key: secretkey
    - name: AWS_REGION
      value: us-east-1
    - name: OSS_IP
      value: "http://192.168.2.78"
    - name: TARGET_BUCKET
      value: vod-content
    - name: FFMPEG_TRANSCODING_PROFILES
      value: "https://raw.githubusercontent.com/pipoe2h/ntnx-objects-nats/master/ffmpeg/example_profiles.yaml"
    - name: USP_LICENSE_KEY
      valueFrom:
        secretKeyRef:
          name: usp-license
          key: usp_license_key
  resources: {}
  imageHash: "1597746408118597927"
  triggers:
    OSSEvents:
      class: ""
      kind: http
      name: OSSEvents
      maxWorkers: 1
  version: -1
  alias: latest
  build:
    functionSourceCode: aW1wb3J0IGpzb24NCmltcG9ydCBib3RvMw0KaW1wb3J0IG9zDQppbXBvcnQgeWFtbA0KaW1wb3J0IHJlcXVlc3RzDQppbXBvcnQgc2h1dGlsDQpmcm9tIGppbmphMiBpbXBvcnQgVGVtcGxhdGUNCg0KIyBJbml0aWFsaXNlIENvbmZpZ3VyYXRpb24gVmFyaWFibGVzDQpBQ0NFU1NfS0VZID0gb3MuZW52aXJvbi5nZXQoJ0FDQ0VTU19LRVknKQ0KU0VDUkVUX0tFWSA9IG9zLmVudmlyb24uZ2V0KCdTRUNSRVRfS0VZJykNCkFXU19SRUdJT04gPSBvcy5lbnZpcm9uLmdldCgnQVdTX1JFR0lPTicpDQpPU1NfSVAgPSBvcy5lbnZpcm9uLmdldCgnT1NTX0lQJykNClRBUkdFVF9CVUNLRVQgPSBvcy5lbnZpcm9uLmdldCgnVEFSR0VUX0JVQ0tFVCcpDQpGRk1QRUdfVFJBTlNDT0RJTkdfUFJPRklMRVMgPSBvcy5lbnZpcm9uLmdldCgnRkZNUEVHX1RSQU5TQ09ESU5HX1BST0ZJTEVTJykNClVTUF9MSUNFTlNFX0tFWSA9IG9zLmVudmlyb24uZ2V0KCdVU1BfTElDRU5TRV9LRVknKQ0KDQojIFNldCBDcmVkZW50aWFscyBmb3IgT2JqZWN0cw0KYm90bzMuc2V0dXBfZGVmYXVsdF9zZXNzaW9uKA0KICAgIGF3c19hY2Nlc3Nfa2V5X2lkPUFDQ0VTU19LRVksDQogICAgYXdzX3NlY3JldF9hY2Nlc3Nfa2V5PVNFQ1JFVF9LRVksDQogICAgcmVnaW9uX25hbWU9QVdTX1JFR0lPTg0KKQ0KDQojIFNjcmlwdHMgZm9yIGVuY29kaW5nL3RyYW5zY29kaW5nIGlucHV0IHZpZGVvIGZpbGUNCnBhc3MxID0gVGVtcGxhdGUoJ2ZmbXBlZyAteSAtaSB7eyBpbnB1dF9maWxlIH19IC1hbiAtYzp2IGxpYngyNjQgLXByZXNldDp2IHt7IHByZXNldCB9fSAtdGhyZWFkcyAwIC1yIHt7IGZwcyB9fSAtZyB7eyBnb3AgfX0gLWtleWludF9taW4ge3sgZ29wIH19IC1zY190aHJlc2hvbGQgMCAteDI2NG9wdHMgYmZyYW1lcz0xIC1wYXNzIDEgLWI6diB7eyBiaXRyYXRlIH19IC1wcm9maWxlOnYge3sgcHJvZmlsZSB9fSAtcyB7eyBzaXplIH19IC1mIG1wNCAtc3RyaWN0IGV4cGVyaW1lbnRhbCAtbW92ZmxhZ3MgZnJhZ19rZXlmcmFtZStlbXB0eV9tb292IHt7IG91dHB1dF9maWxlIH19JykNCnBhc3MyID0gVGVtcGxhdGUoJ2ZmbXBlZyAteSAtaSB7eyBpbnB1dF9maWxlIH19IC1jOmEgYWFjIC1hYyAyIC1hYiB7eyBhdWRpb19iaXRyYXRlIH19IC1jOnYgbGlieDI2NCAtcHJlc2V0OnYge3sgcHJlc2V0IH19IC10aHJlYWRzIDAgLXIge3sgZnBzIH19IC1nIHt7IGdvcCB9fSAta2V5aW50X21pbiB7eyBnb3AgfX0gLXNjX3RocmVzaG9sZCAwIC14MjY0b3B0cyBiZnJhbWVzPTEgLXBhc3MgMiAtYjp2IHt7IGJpdHJhdGUgfX0gLXByb2ZpbGU6diB7eyBwcm9maWxlIH19IC1zIHt7IHNpemUgfX0gLWYgbXA0IC1zdHJpY3QgZXhwZXJpbWVudGFsIC1tb3ZmbGFncyBmcmFnX2tleWZyYW1lK2VtcHR5X21vb3Yge3sgb3V0cHV0X2ZpbGUgfX0nKQ0KDQpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6DQogICAgY29udGV4dC5sb2dnZXIuaW5mbygnVXNpbmcgT2JqZWN0cyBldmVudCB0byBlbmNvZGUvdHJhbnNjb2RlIGZpbGUnKQ0KICAgIHJlc3AgPSBqc29uLmxvYWRzKGV2ZW50LmJvZHkpDQoNCiAgICAjIEdldCBidWNrZXQgbmFtZSBhbmQgZmlsZW5hbWUgZnJvbSBPYmplY3RzIFBVVCBldmVudCAgICANCiAgICBidWNrZXQgPSByZXNwWydSZWNvcmRzJ11bMF1bJ3MzJ11bJ2J1Y2tldCddWyduYW1lJ10NCiAgICBpbnB1dF9maWxlbmFtZSA9IHJlc3BbJ1JlY29yZHMnXVswXVsnczMnXVsnb2JqZWN0J11bJ2tleSddDQoNCiAgICBmaWxlbmFtZSA9IGlucHV0X2ZpbGVuYW1lLnNwbGl0KCcuJylbMF0ubG93ZXIoKQ0KDQogICAgIyBDcmVhdGUgdGVtcCB3b3Jrc3BhY2UgZm9yIGRvd25sb2FkaW5nIGFuZCBjb252ZXJ0aW5nIHZpZGVvIGZpbGUNCiAgICB3b3JrX3BhdGggPSAnL3RtcC97fScuZm9ybWF0KGZpbGVuYW1lKQ0KICAgIHJlbmRlcmVkX3BhdGggPSB3b3JrX3BhdGggKyAnL291dHB1dCcNCg0KICAgIG9zLm1ha2VkaXJzKHJlbmRlcmVkX3BhdGgpDQoNCiAgICB0ZW1wX2ZpbGVuYW1lID0gd29ya19wYXRoICsgJy8nICsgaW5wdXRfZmlsZW5hbWUubG93ZXIoKQ0KDQogICAgIyBEb3dubG9hZCB0aGUgdmlkZW8gZmlsZQ0KICAgIGNsaWVudCA9IGJvdG8zLmNsaWVudCgnczMnLGVuZHBvaW50X3VybD1PU1NfSVApDQogICAgY2xpZW50LmRvd25sb2FkX2ZpbGUoQnVja2V0PWJ1Y2tldCwNCiAgICAgICAgICAgICAgICAgICAgICAgIEtleT1pbnB1dF9maWxlbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgIEZpbGVuYW1lPXRlbXBfZmlsZW5hbWUpDQoNCiAgICAjIEdldCB0aGUgdGFibGUgZnJvbSBleHRlcm5hbCBzb3VyY2UgKEdpdEh1Yikgd2l0aCBwcm9maWxlcyBmb3Igb3V0cHV0IHZpZGVvcw0KICAgIHByb2ZpbGVzID0gcmVxdWVzdHMuZ2V0KEZGTVBFR19UUkFOU0NPRElOR19QUk9GSUxFUykNCiAgICBxdWFsaXRpZXMgPSB5YW1sLmxvYWQocHJvZmlsZXMuY29udGVudCwgTG9hZGVyPXlhbWwuRnVsbExvYWRlcilbJ3F1YWxpdGllcyddDQoNCiAgICBmb3IgcSBpbiBxdWFsaXRpZXM6DQoNCiAgICAgICAgb3V0cHV0X2ZpbGVuYW1lID0gZmlsZW5hbWUgKyAnXycgKyBxICsgJy5tcDQnDQogICAgICAgIG91dHB1dF9wYXRoX2ZpbGVuYW1lID0gcmVuZGVyZWRfcGF0aCArICcvJyArIG91dHB1dF9maWxlbmFtZQ0KDQogICAgICAgIHF1YWxpdGllc1txXVsnaW5wdXRfZmlsZSddID0gdGVtcF9maWxlbmFtZQ0KICAgICAgICBxdWFsaXRpZXNbcV1bJ291dHB1dF9maWxlJ10gPSBvdXRwdXRfcGF0aF9maWxlbmFtZQ0KDQogICAgICAgIGNvbW1hbmQgPSBwYXNzMS5yZW5kZXIocXVhbGl0aWVzW3FdKQ0KICAgICAgICBvcy5zeXN0ZW0oY29tbWFuZCkNCg0KICAgICAgICBjb21tYW5kID0gcGFzczIucmVuZGVyKHF1YWxpdGllc1txXSkNCiAgICAgICAgb3Muc3lzdGVtKGNvbW1hbmQpDQoNCiAgICAgICAgcmVzcG9uc2UgPSBjbGllbnQudXBsb2FkX2ZpbGUoQnVja2V0PVRBUkdFVF9CVUNLRVQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBLZXk9ZmlsZW5hbWUgKyAnLycgKyBvdXRwdXRfZmlsZW5hbWUsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGaWxlbmFtZT1vdXRwdXRfcGF0aF9maWxlbmFtZSkNCg0KICAgICMgQ3JlYXRlIG1hbmlmZXN0IGZpbGUgd2l0aCBPcmlnaW4gbXA0c3BsaXQgZm9yIFZPRA0KICAgIGxpY2Vuc2VfcGF0aCA9IHdvcmtfcGF0aCArICcvbGljZW5zZScNCiAgICBpc21fZmlsZW5hbWUgPSAne30uaXNtJy5mb3JtYXQoZmlsZW5hbWUpDQogICAgaXNtX3BhdGhfZmlsZW5hbWUgPSByZW5kZXJlZF9wYXRoICsgJy8nICsgaXNtX2ZpbGVuYW1lDQoNCiAgICB3aXRoIG9wZW4obGljZW5zZV9wYXRoLCAndycpIGFzIGY6DQogICAgICAgIGYud3JpdGUoVVNQX0xJQ0VOU0VfS0VZKQ0KDQogICAgb3Muc3lzdGVtKCdjZCB7fSAmJiBtcDRzcGxpdCAtLWxpY2Vuc2Uta2V5PXt9IC1vIHt9IConLmZvcm1hdCgNCiAgICAgICAgcmVuZGVyZWRfcGF0aCwNCiAgICAgICAgbGljZW5zZV9wYXRoLA0KICAgICAgICBpc21fZmlsZW5hbWUNCiAgICApKQ0KDQogICAgcmVzcG9uc2UgPSBjbGllbnQudXBsb2FkX2ZpbGUoQnVja2V0PVRBUkdFVF9CVUNLRVQsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEtleT1maWxlbmFtZSArICcvJyArIGlzbV9maWxlbmFtZSwNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRmlsZW5hbWU9aXNtX3BhdGhfZmlsZW5hbWUpDQogICAgDQogICAgIyBSZW1vdmUgdGVtcCB3b3Jrc3BhY2UNCiAgICBzaHV0aWwucm10cmVlKHdvcmtfcGF0aCkNCiAgICANCiAgICByZXR1cm4gY29udGV4dC5SZXNwb25zZShib2R5PXN0cignRG9uZScpLA0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRlbnRfdHlwZT0ndGV4dC9wbGFpbicsDQogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdHVzX2NvZGU9MjAwKQ==
    baseImage: "python:alpine"
    commands:
      - 'apk --update add ffmpeg \'
      - ' && rm -f /var/cache/apk/*'
      - 'wget -q -O /etc/apk/keys/alpine@unified-streaming.com.rsa.pub \'
      - '  https://stable.apk.unified-streaming.com/alpine@unified-streaming.com.rsa.pub'
      - 'apk --update \'
      - '        --repository https://stable.apk.unified-streaming.com/alpine/v3.11 \'
      - '        add \'
      - '          mp4split=1.10.18-r0 \'
      - ' && rm -f /var/cache/apk/*'
      - 'pip3 install boto3 pyyaml requests jinja2'
    runtimeAttributes:
      repositories: []
    codeEntryType: sourceCode
    timestamp: 1597746424
  loggerSinks:
    - level: debug
  platform: {}
  serviceType: NodePort
  eventTimeout: ""
